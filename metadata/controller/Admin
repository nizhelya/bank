{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Admin"
    },
    "designerId": "b5c69a4a-54b0-480b-a908-0d04e420ef1d",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabOperator",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabOperatorActivate",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOperatorBank = Ext.data.StoreManager.get(\"StOperatorBank\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "",
                    "StOperatorBank.load({",
                    "    params: {",
                    "        what:'getOperator',",
                    "        tbank: tbank  ",
                    "",
                    "",
                    "    },",
                    "    scope:this       ",
                    "});  ",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabOperatorActivate",
            "designerId": "7879b417-429c-4d3b-9fd8-4ee16a66ba8c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabOtdelenie",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabOtdelenieActivate",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOtdelenieBank = Ext.data.StoreManager.get(\"StOtdelenieBank\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "",
                    "StOtdelenieBank.load({",
                    "    params: {",
                    "        what:'getOtdelenie',",
                    "        tbank: tbank  ",
                    "",
                    "",
                    "    },",
                    "    scope:this       ",
                    "});  ",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabOtdelenieActivate",
            "designerId": "bcf52425-2f56-497b-9f24-1d553b6e1efe"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabClientBanka",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabClientBankaActivate",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StClientBanka = Ext.data.StoreManager.get(\"StClientBanka\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "",
                    "StClientBanka.load({",
                    "    params: {",
                    "        what:'getClientBanka',",
                    "        tbank: tbank  ",
                    "",
                    "",
                    "    },",
                    "    scope:this       ",
                    "});  ",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabClientBankaActivate",
            "designerId": "c1416895-ec69-41ad-8ba5-1bea63daeaaa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabReestr",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabReestrActivate",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StReestr = Ext.data.StoreManager.get(\"StReestr\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "var address_id = values.get('address_id');",
                    "var address = values.get('address');",
                    "",
                    "//console.log(values);",
                    "",
                    "StReestr.load({",
                    "    params: {",
                    "        what:'getReestr',",
                    "        address_id: address_id ,",
                    "        tbank: tbank",
                    "    },",
                    "    scope:this",
                    "});",
                    "component.down('#grReestr').setTitle(address_id+'  Редактирование реестра по адресу ' +address );",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabReestrActivate",
            "designerId": "387ad9d0-4561-4ee2-a856-09b3659eced4"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabSvod",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabSvodActivate",
                "implHandler": [
                    "var dateSvod = Ext.getCmp('dateSvod');",
                    "var pr = Ext.getCmp('cbKassaSvod');",
                    "var dt = new Date() ;",
                    "dt.getDate();",
                    "dateSvod.setValue(Ext.Date.format(dt, 'Y-m-d'));",
                    "pr.setValue(\"D\");"
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabSvodActivate",
            "designerId": "6c640829-8c9f-4fe5-a348-952f6e64ab34"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddOperator",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddOperatorClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "button.up('#winOperator').close();",
                    "switch (vibor){ ",
                    "    case 'addOperator':  // ВЫБРАНА КВАРТИРА ",
                    "    me.fnAddOperator(value);",
                    "    break;",
                    "    case 'editOperator':  // ВЫБРАНА КВАРТИРА ",
                    "    me.fnEditOperator(value);",
                    "    break;",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddOperatorClick",
            "designerId": "8a38dca5-2c9e-42ec-927a-1138dcdc43e4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "fnAddOperator",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOperatorBank = Ext.data.StoreManager.get(\"StOperatorBank\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "",
                    "//LOGIKA",
                    "",
                    "var params = {",
                    "    tbank:values.get('tbank'),    ",
                    "    what:\"insertOperator\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QuerySprav.createRecord(value,function(results){",
                    "    if (results.success){ ",
                    "        StOperatorBank.load({",
                    "            params:{",
                    "                what:'getOperator',",
                    "                tbank: tbank  ",
                    "",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    }",
                    "});"
                ]
            },
            "name": "fnAddOperator",
            "designerId": "42d3fb99-20bd-4ddf-a1e5-d6a15a347bd6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "fnEditOperator",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOperatorBank = Ext.data.StoreManager.get(\"StOperatorBank\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "",
                    "//LOGIKA",
                    "",
                    "var params = {",
                    "    tbank:values.get('tbank'),    ",
                    "    what:\"updateOperator\"",
                    "};",
                    "",
                    "//GRID",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QuerySprav.updateRecords(value,function(results){",
                    "    if (results.success){ ",
                    "        StOperatorBank.load({",
                    "            params:{",
                    "                what:'getOperator',",
                    "                tbank: tbank  ",
                    "",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "fnEditOperator",
            "designerId": "01d04b9c-004e-4bdd-ae77-a68c973efd61"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddOtdelenie",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddOtdelenieClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "button.up('#winOtdelenie').close();",
                    "switch (vibor){ ",
                    "    case 'addOtdelenie': ",
                    "    me.fnAddOtdelenie(value);",
                    "    break;",
                    "    case 'editOtdelenie': ",
                    "    me.fnEditOtdelenie(value);",
                    "    break;",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddOtdelenieClick",
            "designerId": "552f1725-4ec2-4842-a51d-849216c209a5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "fnAddOtdelenie",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOtdelenieBank = Ext.data.StoreManager.get(\"StOtdelenieBank\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "",
                    "//LOGIKA",
                    "",
                    "var params = {",
                    "    tbank:values.get('tbank'),    ",
                    "    what:\"insertOtdelenie\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QuerySprav.createRecord(value,function(results){",
                    "    if (results.success){ ",
                    "        StOtdelenieBank.load({",
                    "            params:{",
                    "                what:'getOtdelenie',",
                    "                tbank: tbank  ",
                    "",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    }",
                    "});"
                ]
            },
            "name": "fnAddOtdelenie",
            "designerId": "231f0083-3eab-4309-b729-a1d1cfb4b1e6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "fnEditOtdelenie",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOtdelenieBank = Ext.data.StoreManager.get(\"StOtdelenieBank\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "",
                    "//LOGIKA",
                    "",
                    "var params = {",
                    "    tbank:values.get('tbank'),    ",
                    "    what:\"updateOtdelenie\"",
                    "};",
                    "",
                    "//GRID",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QuerySprav.updateRecords(value,function(results){",
                    "    if (results.success){ ",
                    "        StOtdelenieBank.load({",
                    "            params:{",
                    "                what:'getOtdelenie',",
                    "                tbank: tbank  ",
                    "",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "fnEditOtdelenie",
            "designerId": "f5b83653-cf85-421a-9d82-f30901e85b53"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddClientBanka",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddClientBankaClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = values.get('vibor');",
                    "button.up('#winClientBanka').close();",
                    "switch (vibor){ ",
                    "    case 'addClientBanka': ",
                    "    me.fnAddClientBanka(value);",
                    "    break;",
                    "    case 'editClientBanka': ",
                    "    me.fnEditClientBanka(value);",
                    "    break;",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddClientBankaClick",
            "designerId": "48b93afd-0c14-41c9-af76-a4b3f2ed6466"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "fnAddClientBanka",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StClientBanka = Ext.data.StoreManager.get(\"StClientBanka\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "",
                    "//LOGIKA",
                    "",
                    "var params = {",
                    "    tbank:values.get('tbank'),    ",
                    "    what:\"insertClientBanka\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QuerySprav.createRecord(value,function(results){",
                    "    if (results.success){ ",
                    "        StClientBanka.load({",
                    "            params:{",
                    "                what:'getClientBanka',",
                    "                tbank: tbank  ",
                    "",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    }",
                    "});"
                ]
            },
            "name": "fnAddClientBanka",
            "designerId": "3406448b-bf2f-467a-b25a-bfc0b5ee9b4e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "fnEditClientBanka",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StClientBanka = Ext.data.StoreManager.get(\"StClientBanka\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.get('tbank');",
                    "",
                    "//LOGIKA",
                    "",
                    "var params = {",
                    "    tbank:values.get('tbank'),    ",
                    "    what:\"updateClientBanka\"",
                    "};",
                    "",
                    "//GRID",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "",
                    "QuerySprav.updateRecords(value,function(results){",
                    "    if (results.success){ ",
                    "        StClientBanka.load({",
                    "            params:{",
                    "                what:'getClientBanka',",
                    "                tbank: tbank  ",
                    "",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "fnEditClientBanka",
            "designerId": "9451cd5f-aaed-4f12-a75a-5ceadecea034"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#printSvod",
                "designer|targetType": "Ext.button.Button",
                "fn": "onPrintSvodClick",
                "implHandler": [
                    "//in use",
                    "var me = this;",
                    "var StUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StReport = Ext.data.StoreManager.get(\"StReport\");",
                    "var data = Ext.getCmp('dateSvod').getValue();",
                    "var pr = Ext.getCmp('cbKassaSvod').getValue();",
                    "var otdel_id = Ext.getCmp('cbOtdelenieSvod').getValue();",
                    "",
                    "",
                    "var values =StUser.getAt(0);",
                    "var tbank = values.data.tbank;",
                    "var user_id = values.data.user_id;",
                    "//console.log(values);",
                    "var usertype = 1;",
                    "",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');//me.getTabPnCenter();",
                    "if (otdel_id) {",
                    "    var report = 'PrintSvod';",
                    "    var namereport = 'Печать свода';",
                    "    var value = {",
                    "        login:values.get('login'),",
                    "        tbank:tbank,",
                    "        pr:pr,",
                    "        report:report,",
                    "        data:data,",
                    "        what:report,",
                    "        otdel_id: otdel_id,",
                    "        user_id:user_id",
                    "    };",
                    "    var tab = tabPnCenter.child('#'+report);",
                    "    if (!tab) {",
                    "        tab  = tabPnCenter.add({",
                    "            xtype:'tabreportorg',",
                    "            title:namereport,",
                    "            id:''+report+''",
                    "        });",
                    "",
                    "    }",
                    "    tabPnCenter.setActiveTab(tab);",
                    "    var reppan = tab.getComponent(0);",
                    "    // Basic mask:",
                    "     var myMask =new Ext.LoadMask({",
                    "         target: reppan ,",
                    "         msg:\"Загрузка...\"",
                    "     });",
                    "    myMask.show();",
                    "    QueryReport.printSvod(value,function(data){",
                    "        if (data){",
                    "            reppan.update(data.content);",
                    "            Ext.REPORTCONTENT =data.content;",
                    "            Ext.REPORTSQL =data.sql;",
                    "            Ext.REPORTTITLE =report;",
                    "            myMask.hide();",
                    "",
                    "        } else {",
                    "            myMask.hide();",
                    "            Ext.MessageBox.show({",
                    "                title: 'Ошибка ',",
                    "                msg: 'Документ не создан',",
                    "                buttons: Ext.MessageBox.OK,",
                    "                icon: Ext.MessageBox.ERROR",
                    "            });",
                    "        }",
                    "    });",
                    "   ",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onPrintSvodClick",
            "designerId": "fa2ea20a-ca4b-4f75-adeb-8cba28fff26e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#exportSvod",
                "designer|targetType": "Ext.button.Button",
                "fn": "onExportSvodClick",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD & SQL",
                    "",
                    "var values =stUser.getAt(0);",
                    "var tbank = values.data.tbank;",
                    "var user_id = values.data.user_id;",
                    "var role = values.data.role;",
                    "//console.log(values);",
                    "",
                    "var data = Ext.getCmp('dateSvod').getValue();",
                    "var pr = Ext.getCmp('cbKassaSvod').getValue();",
                    "var otdel_id = Ext.getCmp('cbOtdelenieSvod').getValue();",
                    "",
                    "if (role==='Админ') {",
                    "//console.log(values);",
                    "",
                    "    button.setParams({tbank:tbank,otdel_id:otdel_id,pr:pr,data:data});",
                    "}else {",
                    "    Ext.MessageBox.show({",
                    "        title: 'Ошибка ',",
                    "        msg: 'Экспортировать свод может только администратор',",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.ERROR",
                    "    });  }",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onExportSvodClick",
            "designerId": "24a8dcd9-e4cb-44d7-9c47-13882fa1dbc4"
        }
    ]
}