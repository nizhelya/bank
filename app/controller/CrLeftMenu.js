/*
 * File: app/controller/CrLeftMenu.js
 * Date: Tue Dec 01 2020 16:15:50 GMT+0200 (EET)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Bank.controller.CrLeftMenu', {
    extend: 'Ext.app.Controller',
    alias: 'controller.crLeftMenu',

    views: [
        'VpKommuna',
        'menu.TabPnCenter'
    ],

    refs: {
        CbRaion: '#cbRaion',
        ListHouses: '#listHouses',
        ListHousesData: 'listHouses dataview',
        CbStreet: '#cbStreet',
        ShowAddress: '#showAddress',
        VpKommuna: {
            selector: '#vpKommuna',
            xtype: 'vpkommuna'
        },
        TabPnCenter: {
            selector: '#tabPnCenter',
            xtype: 'tabpncenter'
        }
    },

    control: {
        "#cbRaion": {
            select: 'onCbRaionSelect'
        },
        "#cbStreet": {
            select: 'onCbStreetSelect'
        },
        "#listHousesView": {
            itemclick: 'onListHousesViewItemClick'
        },
        "#tabMenuLifeFond": {
            activate: 'onTabMenuLifeFondActivate'
        },
        "#tabMenuSprav": {
            activate: 'onPanelActivate'
        }
    },

    onCbRaionSelect: function(combo, record, eOpts) {
        //in use
        var me=this;
        /*
        COMPONENT
        */
        var cbStreet = me.getCbStreet();
        var viewHouses = me.getListHousesData();
        /*
        STORE
        */
        var stUser = Ext.data.StoreManager.get("StUser");
        var stHouses = Ext.data.StoreManager.get("StHouses");
        /*
        LOGIN & PASSWORD
        */
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        /*
        LOGIKA
        */

        cbStreet.clearValue();
        if (record) {
            stHouses.load({
                params: {
                    what:'HousesFromRaion',
                    what_id: record.get('raion_id'),
                    login:login,
                    password:password
                },
                scope: this
            });
        }

    },

    onCbStreetSelect: function(combo, record, eOpts) {
        //in use
        var me=this;
        /*
        COMPONENT
        */
        var cbRaion = me.getCbRaion();
        var viewHouses = me.getListHousesData();
        /*
        STORE
        */
        var stUser = Ext.data.StoreManager.get("StUser");
        var stHouses = Ext.data.StoreManager.get("StHouses");
        /*
        LOGIN & PASSWORD
        */
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');
        /*
        LOGIKA
        */
        cbRaion.clearValue();
        if (record) {
            stHouses.load({
                params: {
                    what:'HousesFromStreet',
                    what_id: record.get('street_id'),
                    privat: record.get('privat'),
                    login:login,
                    password:password
                },
                scope: this
            });
        }
    },

    onListHousesViewItemClick: function(dataview, record, item, index, e, eOpts) {
        //in use
        var me = this;
        var showAddress = Ext.getCmp('showAddress');
        var showHouse = Ext.getCmp('showHouse');

        // STORE

        var stUser = Ext.data.StoreManager.get("StUser");

        //LOGIN & PASSWORD

        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');

        //LOGIKA

        if (login) {
            var selected = record.data;
            if (selected){
                values.set({'house_id':selected.house_id,
                            'house':selected.house,
                            'address_id':selected.address_id,
                            'address':selected.address,
                            'raion_id':selected.raion_id,
                            'raion':selected.raion,
                            'appartment':selected.appartment,
                            'street_id':selected.street_id,
                            'vibor':"app"
                           });

                if(selected.address_id===0){
                    Ext.MessageBox.prompt(selected.house,
                                          ' Введите номер квартиры:',
                                          function(btn,text){
                                              if (btn == 'ok') {
                                                  var sendValue = {'what': 'CheckFlat',
                                                                   'what_id': selected.house_id,
                                                                   'appartment':text,
                                                                   login:login ,
                                                                   password:password};
                                                  //   console.log(sendValue);

                                                  QueryAddress.getResults(sendValue,function(results){
                                                      if (results.success){
                                                          if (results.data[0]) {
                                                              values.set({'raion_id':results.data[0].raion_id,
                                                                          'raion':results.data[0].raion,
                                                                          'street_id':results.data[0].street_id,
                                                                          'house_id':results.data[0].house_id,
                                                                          'house':results.data[0].house,
                                                                          'address_id':results.data[0].address_id,
                                                                          'address':results.data[0].address,
                                                                          'appartment':results.data[0].appartment,
                                                                          'vibor':"app"
                                                                         });
                                                                      stUser.sync();
                            //console.log(values);

                                                              showAddress.setText(results.data[0].address).show();
                                                              me.LoadFlatData(true);
                                                          } else {
                                                              Ext.MessageBox.show({title: 'Выбор номера квартиры',
                                                                                   msg: 'Квартира не найдена',
                                                                                   buttons: Ext.MessageBox.OK,
                                                                                   icon: Ext.MessageBox.ERROR
                                                                                  });
                                                          }
                                                      }
                                                  }
                                                                         );
                                              }
                                          });
                }else{

                    me.LoadFlatData(true);
                }

            }
        }
    },

    onTabMenuLifeFondActivate: function(component, eOpts) {
        var me=this;
        var tabPnCenter = me.getTabPnCenter();
        tabPnCenter.child('#tabKassa').tab.hide();
        tabPnCenter.child('#tabLogin').tab.hide();
        tabPnCenter.setActiveTab('tabLogin');
    },

    onPanelActivate: function(component, eOpts) {
        //in use
        var me=this;
        //TAB
        var tabPnCenter = me.getTabPnCenter();
        //LOGIKA

        tabPnCenter.child('#tabLogin').tab.hide();
        tabPnCenter.setActiveTab('tabLogin');
    },

    LoadFlatData: function(adr) {
        var me = this;
        var crKassa = this.application.getController('CrKassa');
        var tabPnCenter = me.getTabPnCenter();
        var activeTab = tabPnCenter.getActiveTab();
        var nameactiveTab = activeTab.getXType();
        var index = tabPnCenter.items.indexOf(activeTab);
        var stUser = Ext.data.StoreManager.get("StUser");

        var values =stUser.getAt(0);
        var login = values.get('login');
        var tbank = values.get('tbank');
        var address_id = values.get('address_id');
        var address = values.get('address');
        var house_id = values.get('house_id');
        var user_id = values.get('user_id');
        if(adr){
            tabPnCenter.child('#tabKassa').tab.show();
            tabPnCenter.child('#tabReestr').tab.show();
            tabPnCenter.child('#tabLogin').tab.hide();
            if (nameactiveTab==='tabkassa'){
                crKassa.onTabKassaActivate();
            }
            tabPnCenter.setActiveTab('tabKassa');



        }
    }

});
