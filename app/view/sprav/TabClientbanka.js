/*
 * File: app/view/sprav/TabClientbanka.js
 * Date: Thu Dec 03 2020 20:48:47 GMT+0200 (EET)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Bank.view.sprav.TabClientbanka', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabclientbanka',

    requires: [
        'Bank.view.sprav.TabClientbankaViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.grid.column.Number',
        'Ext.grid.column.Action',
        'Ext.form.field.ComboBox'
    ],

    viewModel: {
        type: 'tabClientBanka'
    },
    id: 'tabClientBanka',
    scrollable: true,
    layout: 'fit',
    title: 'Клиенты банка',

    items: [
        {
            xtype: 'gridpanel',
            id: 'grClientBanka',
            scrollable: true,
            width: 522,
            title: 'Ввод и редактированние списка клиентов банка',
            store: 'StClientBanka',
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                //LOGIKA'
                                values.set({'vibor':'addClientBanka'});
                                stUser.sync();
                                var winClientBanka = Ext.ClassManager.instantiateByAlias('widget.winclientbanka');
                                winClientBanka.show();
                            },
                            id: 'btnAddOtdelenie1',
                            icon: 'resources/css/images/ico/add.png',
                            text: 'Добавить клиента '
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    width: 62,
                    dataIndex: 'client_id',
                    text: 'Ид'
                },
                {
                    xtype: 'actioncolumn',
                    width: 34,
                    menuDisabled: true,
                    tooltip: 'редактировать',
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                Ext.MessageBox.confirm({
                                    title: 'Обновление данных ',
                                    msg: 'Вы обновляете данные по клиенту. <br>Подтвердите или отмените свои действия.',
                                    buttons: Ext.MessageBox.OKCANCEL,
                                    icon: Ext.MessageBox.ERROR,
                                    buttonText:{
                                        ok:'подтвеждаю',
                                        cancel:'отмена'
                                    },
                                    fn:function(btn,newValue){
                                        if(btn=='ok'){

                                            var winClientBanka = Ext.ClassManager.instantiateByAlias('widget.winclientbanka');
                                            var form = winClientBanka.down('#fmClientBanka');

                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);
                                            values.set({'vibor':'editClientBanka'});
                                            stUser.sync();
                                            var value = record;

                                            view.getSelectionModel().select(rowIndex);
                                            form.loadRecord(value);
                                            form.down('#btAddClientBanka').setText('Обновмть данные');

                                            winClientBanka.setTitle('Редактирование записи');

                                            winClientBanka.show();
                                        }
                                    }
                                });

                            },
                            icon: 'resources/css/images/ico/edit.png',
                            tooltip: 'редактировать'
                        }
                    ]
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        metaData.style = 'white-space:pre-wrap;';
                        return value;

                    },
                    width: 137,
                    dataIndex: 'usluga',
                    text: 'Услуга',
                    editor: {
                        xtype: 'combobox',
                        displayField: 'usluga',
                        store: 'StUsluga',
                        valueField: 'usluga'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        metaData.style = 'white-space:pre-wrap;';
                        return value;

                    },
                    width: 180,
                    dataIndex: 'detali',
                    menuDisabled: true,
                    text: 'Детали платежа'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        metaData.style = 'white-space:pre-wrap;';
                        return value;

                    },
                    width: 191,
                    dataIndex: 'client',
                    menuDisabled: true,
                    text: 'Клиент'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return Ext.String.format('<div class="topic"> <b>{0}</b><span class="author">МФО {1} </span><span class="author">ЕДРПУ {2}</span><br><span class="author">р.сч {3} </span></div>',
                        value,
                        record.get('mfo') || "",
                        record.get('okpo') || "",
                        record.get('account') || "");
                    },
                    width: 246,
                    dataIndex: 'bank',
                    menuDisabled: true,
                    text: 'Банк клиента'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        metaData.style = 'white-space:pre-wrap;';
                        return value;

                    },
                    width: 132,
                    dataIndex: 'address',
                    menuDisabled: true,
                    text: 'Адрес банка'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    width: 79,
                    dataIndex: 'mfo',
                    menuDisabled: true,
                    text: 'МФО',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    width: 87,
                    dataIndex: 'okpo',
                    menuDisabled: true,
                    text: 'ЕДРПУ',
                    format: '0'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    width: 105,
                    dataIndex: 'account',
                    menuDisabled: true,
                    text: 'Счет',
                    format: '0'
                },
                {
                    xtype: 'actioncolumn',
                    hidden: true,
                    width: 34,
                    menuDisabled: true,
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                var grid = view.findParentByType('grid');
                                var store = view.store;
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var tbank = values.get('tbank');
                                var params = {
                                    tbank:values.get('tbank'),
                                    what:"deleteClientBanka"
                                };
                                var value = view.getStore().getAt(rowIndex).data;
                                //LOGIKA
                                Ext.Object.merge(value, params);
                                Ext.MessageBox.show({
                                    title: 'Внимание!',
                                    msg: 'Вы удаляете запись ! Подтвердите свои действия!',
                                    buttons: Ext.MessageBox.OKCANCEL,
                                    icon: Ext.MessageBox.WARNING,

                                    buttonText:{
                                        ok: "Удалить!",
                                        cancel: "Отмена"
                                    },
                                    fn:function(btn){
                                        if(btn=='ok'){
                                            QuerySprav.destroyRecord(value,function(results){
                                                if (results.success){
                                                    Ext.MessageBox.show({
                                                        title: 'Удаление записи',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                    store.load({
                                                        params:{
                                                            what:'getClientBanka',
                                                            tbank: tbank

                                                        },
                                                        scope:this
                                                    });
                                                } else {
                                                    Ext.MessageBox.show({
                                                        title: 'Удаление записи',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });
                                                }
                                            });
                                        }
                                    }
                                });
                            },
                            icon: 'resources/css/images/ico/no.png',
                            tooltip: 'удалить'
                        }
                    ]
                }
            ]
        }
    ]

});