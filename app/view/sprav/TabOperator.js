/*
 * File: app/view/sprav/TabOperator.js
 * Date: Thu May 28 2015 10:26:38 GMT+0300 (EEST)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Bank.view.sprav.TabOperator', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.taboperator',

    requires: [
        'Bank.view.sprav.TabOperatorViewModel',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Number',
        'Ext.grid.column.Action',
        'Ext.form.field.ComboBox',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'tabOperator'
    },
    id: 'tabOperator',
    scrollable: true,
    layout: 'fit',
    title: 'Операторы',

    items: [
        {
            xtype: 'gridpanel',
            id: 'grOperator',
            scrollable: true,
            width: 522,
            title: 'Ввод и редактированние списка операторов банка',
            store: 'StOperatorBank',
            columns: [
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'user_id',
                    text: 'User_id',
                    format: '0'
                },
                {
                    xtype: 'actioncolumn',
                    maxWidth: 30,
                    minWidth: 30,
                    width: 37,
                    menuDisabled: true,
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                Ext.MessageBox.confirm({
                                    title: 'Обновление данных ',
                                    msg: 'Вы обновляете данные оператора. <br>Подтвердите или отмените свои действия.',
                                    buttons: Ext.MessageBox.OKCANCEL,
                                    icon: Ext.MessageBox.ERROR,
                                    buttonText:{
                                        ok:'подтвеждаю',
                                        cancel:'отмена'
                                    },
                                    fn:function(btn,newValue){
                                        if(btn=='ok'){

                                            var winOperator = Ext.ClassManager.instantiateByAlias('widget.winoperator');
                                            var form = winOperator.down('#fmOperator');
                                            var password = form.getForm().findField('password');
                                            password.hide();
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);
                                            values.set({'vibor':'editOperator'});
                                            stUser.sync();
                                            var value = record;//stVodomer.getAt(rowIndex).data;
                                            //LOGIKA'
                                            //console.log(values.get('address_id'));
                                            view.getSelectionModel().select(rowIndex);
                                            form.loadRecord(value);
                                            form.down('#btAddOperator').setText('Обновмть данные');

                                            winOperator.setTitle('Редактирование записи');

                                            winOperator.show();
                                        }
                                    }
                                });


                            },
                            icon: 'resources/css/images/ico/edit.png',
                            tooltip: 'Удалить последний платеж'
                        }
                    ]
                },
                {
                    xtype: 'gridcolumn',
                    width: 174,
                    dataIndex: 'login',
                    text: 'Оператор',
                    editor: {
                        xtype: 'textfield'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    width: 246,
                    dataIndex: 'password',
                    text: 'Пароль',
                    editor: {
                        xtype: 'textfield'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'role',
                    text: 'Роль',
                    editor: {
                        xtype: 'combobox',
                        displayField: 'role',
                        queryMode: 'local',
                        store: 'StRole',
                        valueField: 'role'
                    }
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'bank_id',
                    text: 'Bank_id'
                },
                {
                    xtype: 'numbercolumn',
                    hidden: true,
                    dataIndex: 'kod',
                    text: 'Kod'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'tbank',
                    text: 'Bank'
                },
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: 'otdel',
                    text: 'Отделение'
                },
                {
                    xtype: 'actioncolumn',
                    id: 'actDelete',
                    maxWidth: 30,
                    minWidth: 30,
                    width: 30,
                    menuDisabled: true,
                    flex: 1,
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                var grid = view.findParentByType('grid');
                                var store = view.store;
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                var tbank = values.get('tbank');
                                var params = {
                                    tbank:values.get('tbank'),
                                    what:"deleteOperator"
                                };
                                var value = view.getStore().getAt(rowIndex).data;
                                //LOGIKA
                                Ext.Object.merge(value, params);
                                Ext.MessageBox.show({
                                    title: 'Внимание!',
                                    msg: 'Вы удаляете запись ! Подтвердите свои действия!',
                                    buttons: Ext.MessageBox.OKCANCEL,
                                    icon: Ext.MessageBox.WARNING,

                                    buttonText:{
                                        ok: "Удалить!",
                                        cancel: "Отмена"
                                    },
                                    fn:function(btn){
                                        if(btn=='ok'){
                                            QuerySprav.destroyRecord(value,function(results){
                                                if (results.success){
                                                    Ext.MessageBox.show({
                                                        title: 'Удаление записи',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                    store.load({
                                                        params:{
                                                            what:'getOperator',
                                                            tbank: tbank

                                                        },
                                                        scope:this
                                                    });
                                                } else {
                                                    Ext.MessageBox.show({
                                                        title: 'Удаление записи',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });
                                                }
                                            });
                                        }
                                    }
                                });
                            },
                            icon: 'resources/css/images/ico/no.png',
                            tooltip: 'Удалить последний платеж'
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var stUser = Ext.data.StoreManager.get("StUser");
                                var values =stUser.getAt(0);
                                //LOGIKA'
                                values.set({'vibor':'addOperator'});
                                stUser.sync();
                                var winOperator = Ext.ClassManager.instantiateByAlias('widget.winoperator');
                                var form = winOperator.down('#fmOperator');
                                form.getForm().findField('role').setValue('Кассир');

                                var check = form.down('#chkPassword');
                                check.hide();
                                winOperator.show();
                            },
                            id: 'btnAddOperator',
                            icon: 'resources/css/images/ico/add.png',
                            text: 'Добавить оператора'
                        }
                    ]
                }
            ]
        }
    ]

});